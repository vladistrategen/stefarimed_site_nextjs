generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Appointment {
  id                                          BigInt                                        @id @default(autoincrement())
  date                                        DateTime                                      @db.Date
  time                                        DateTime                                      @db.Time(6)
  completed                                   Boolean
  confirmation_status                         String                                        @db.VarChar(20)
  doctor_id                                   BigInt
  patient_id                                  BigInt
  description                                 String                                        @db.VarChar(200)
  duration_in_minutes                         Int
  price                                       Int
  patient_patient                             Patient                               @relation(fields: [patient_id], references: [id], onUpdate: Restrict, map: "appointment_appointm_patient_id_893eaa7b_fk_patient_p")
  doctors_doctor                              Doctor                                @relation(fields: [doctor_id], references: [id], onUpdate: Restrict, map: "appointment_appointment_doctor_id_5325109f_fk_doctors_doctor_id")
  appointment_procedure_appointment_procedure appointment_procedure_appointment_procedure[]

  @@index([patient_id], map: "appointment_appointm_patient_id_893eaa7b_fk_patient_p")
  @@index([doctor_id], map: "appointment_appointment_doctor_id_5325109f_fk_doctors_doctor_id")
	@@map("appointment_appointment")
}

model appointment_procedure_appointment_procedure {
  id                      BigInt                  @id @default(autoincrement())
  appointmentID_id        BigInt
  procedureID_id          BigInt
  appointment_appointment Appointment @relation(fields: [appointmentID_id], references: [id], onUpdate: Restrict, map: "appointment_procedur_appointmentID_id_7f0d2fb5_fk_appointme")
  procedure_procedure     Procedure     @relation(fields: [procedureID_id], references: [id], onUpdate: Restrict, map: "appointment_procedur_procedureID_id_47eb0944_fk_procedure")

  @@index([appointmentID_id], map: "appointment_procedur_appointmentID_id_7f0d2fb5_fk_appointme")
  @@index([procedureID_id], map: "appointment_procedur_procedureID_id_47eb0944_fk_procedure")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onUpdate: Restrict, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(6)
  is_superuser               Boolean
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.DateTime(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
}

model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model doctor_procedure_doctor_procedure {
  id                  BigInt              @id @default(autoincrement())
  doctorID_id         BigInt
  procedureID_id      BigInt
  doctors_doctor      Doctor      @relation(fields: [doctorID_id], references: [id], onUpdate: Restrict, map: "doctor_procedure_doc_doctorID_id_3b53fd36_fk_doctors_d")
  procedure_procedure Procedure @relation(fields: [procedureID_id], references: [id], onUpdate: Restrict, map: "doctor_procedure_doc_procedureID_id_44bc9067_fk_procedure")

  @@index([doctorID_id], map: "doctor_procedure_doc_doctorID_id_3b53fd36_fk_doctors_d")
  @@index([procedureID_id], map: "doctor_procedure_doc_procedureID_id_44bc9067_fk_procedure")
}

model Doctor {
  id                                BigInt                              @id @default(autoincrement())
  first_name                        String                              @db.VarChar(30)
  last_name                         String                              @db.VarChar(30)
  email                             String                              @db.VarChar(254)
  phone_number                      String                              @db.VarChar(15)
  preferred_color                   String                              @db.VarChar(7)
  appointment_appointment           Appointment[]
  doctor_procedure_doctor_procedure doctor_procedure_doctor_procedure[]
	@@map("doctors_doctor")
}

model Patient {
  id                      BigInt                    @id @default(autoincrement())
  first_name              String                    @db.VarChar(30)
  last_name               String                    @db.VarChar(30)
  phone_number            String                    @db.VarChar(15)
  birth_date              DateTime                  @db.Date
  appointment_appointment Appointment[]
	@@map("patient_patient")
}

model Procedure {
  id                                          BigInt                                        @id @default(autoincrement())
  name                                        String                                        @db.VarChar(200)
  price                                       Int
  appointment_procedure_appointment_procedure appointment_procedure_appointment_procedure[]
  doctor_procedure_doctor_procedure           doctor_procedure_doctor_procedure[]
	@@map("procedure_procedure")
}
